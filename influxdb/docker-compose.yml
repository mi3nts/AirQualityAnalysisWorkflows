# docker-compose.yml
# note: we can add restart:always to make the container run on reboot
version: '3'
services: 
  influxdb: 
    build: ./influxdb-docker
    image: mints-influxdb
    volumes:
      - type: bind
        source: ${DOCKER_INFLUXDB_DATA_BM:?err}
        target: /var/lib/influxdb2
      - type: bind
        source: ${DOCKER_INFLUXDB_CONFIG_BM:?err}
        target: /etc/influxdb2
    networks:
      - shared
    restart: unless-stopped

    ports:
      - '8086:8086'
    # env_file:
    #   - .env

    environment:
      - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE:?err}
      - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME:?err}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD:?err}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG:?err}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET:?err}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN:?err}
    
  
  ofelia:
    image: docker.io/mcuadros/ofelia:latest
    depends_on:
      - influxdb
    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:consistent
      - ./ofelia.ini:/etc/ofelia/config.ini:consistent
    networks:
      - shared

    restart: unless-stopped



  nodered:
    build: ./nodered-docker
    image: mints-nodered
    ports:
      - "1880:1880"
    networks:
      - shared
    # env_file:
    #   - .env

    environment:
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG:?err}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET:?err}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN:?err}
      - MQTT_CENTRAL_NODES_USERNAME=${MQTT_CENTRAL_NODES_USERNAME:?err}
      - MQTT_CENTRAL_NODES_PASSWORD=${MQTT_CENTRAL_NODES_PASSWORD:?err}
      - MQTT_LORA_NODES_USERNAME=${MQTT_LORA_NODES_USERNAME:?err}
      - MQTT_LORA_NODES_PASSWORD=${MQTT_LORA_NODES_PASSWORD:?err}

    depends_on:
      - influxdb
    restart: unless-stopped


  grafana:
    build: ./grafana-docker
    image: mints-grafana
    ports:
      - "3000:3000"
    networks:
      - shared
    # env_file:
    #   - .env

    environment:
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG:?err}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET:?err}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN:?err}
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:?err}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:?err}
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS:?err}
      - GF_AUTH_ANONYMOUS_ENABLED=true
    depends_on:
      - influxdb

    restart: unless-stopped

  quarto:
    build: ./quarto-docker
    image: mints-quarto
    ports: 
      - "3100:3100"
      - "6049:6049"
    networks:
      - shared
    tty: true
    restart: unless-stopped


networks:
  shared:
