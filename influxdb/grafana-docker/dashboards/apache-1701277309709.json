{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 10,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n\n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "import \"math\"\r\nfrom(bucket: \"SharedAirDFW\")\r\n  |> range(start: -1h, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IPS7100\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pm10_0\")\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "import \"math\"\r\nfrom(bucket: \"SharedAirDFW\")\r\n  |> range(start: -1h, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IPS7100\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pm5_0\")\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "import \"math\"\r\nfrom(bucket: \"SharedAirDFW\")\r\n  |> range(start: -1h, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IPS7100\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pm2_5\")\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "import \"math\"\r\nfrom(bucket: \"SharedAirDFW\")\r\n  |> range(start: -1h, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IPS7100\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pm1_0\")\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "import \"math\"\r\nfrom(bucket: \"SharedAirDFW\")\r\n  |> range(start: -1h, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IPS7100\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pm0_5\")\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "import \"math\"\r\nfrom(bucket: \"SharedAirDFW\")\r\n  |> range(start: -1h, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IPS7100\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pm0_1\")\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F"
        }
      ],
      "title": "Panel Title",
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 3,
      "interval": "125",
      "pconfig": {
        "layout": {
          "autosize": false,
          "font": {
            "color": "rgb(110,110,110)",
            "family": "\"Open Sans\", Helvetica, Arial, sans-serif"
          },
          "hovermode": "closest",
          "legend": {
            "orientation": "v"
          },
          "paper_bgcolor": "transparent",
          "plot_bgcolor": "transparent",
          "polar": {
            "angularaxis": {
              "direction": "counterclockwise",
              "dtick": 22.5,
              "rotation": 90
            },
            "radialaxis": {
              "angle": 90,
              "ticksuffix": "%"
            }
          },
          "showlegend": true
        },
        "mapping": {
          "color": "@index",
          "x": "windDirectionTrue {device_id=\"001e06430224\", device_name=\"Central Hub 8\"}",
          "y": "windSpeedMetersPerSecond {device_id=\"001e06430224\", device_name=\"Central Hub 8\"}"
        },
        "settings": {
          "color_option": "ramp",
          "displayModeBar": false,
          "marker": {
            "color": "#33B5E5",
            "colorscale": "YIOrRd",
            "showscale": true,
            "size": 15,
            "sizemin": 3,
            "sizemode": "diameter",
            "sizeref": 0.2,
            "symbol": "circle"
          },
          "petals": 100,
          "plot": "windrose",
          "wind_speed_interval": 2
        }
      },
      "pluginVersion": "9.3.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\n  |> filter(fn: (r) => r[\"_field\"] == \"windSpeedMetersPerSecond\")\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "windSpeed"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\n  |> filter(fn: (r) => r[\"_field\"] == \"windDirectionTrue\")\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> aggregateWindow(every: 5m, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "windDirection"
        }
      ],
      "title": "Wind Speed and Direction (WIMDA)",
      "transformations": [],
      "transparent": true,
      "type": "fatcloud-windrose-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 4,
      "interval": "125",
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "// Create an array of wind speed intervals\nvar intervals = [\n  { start: 0, end: 2 },\n  { start: 2, end: 4 },\n  { start: 4, end: 6 },\n  { start: 6, end: 8 },\n  { start: 8, end: 10 }\n];\n\n// Your wind data (replace with your own data)\nvar windData = [\n  { direction: 'N', speed: 1.5 },\n  { direction: 'NE', speed: 3.7 },\n  { direction: 'E', speed: 4.2 },\n  { direction: 'SE', speed: 6.1 },\n  { direction: 'S', speed: 7.9 },\n  { direction: 'SW', speed: 9.3 },\n  { direction: 'W', speed: 8.1 },\n  { direction: 'NW', speed: 2.8 },\n  // Add more data entries as needed\n];\n\n// Sort wind data into intervals\nvar data = intervals.map(function (interval) {\n  var filteredData = windData.filter(function (entry) {\n    return entry.speed >= interval.start && entry.speed < interval.end;\n  });\n\n  return {\n    interval: interval.start + \"-\" + interval.end + \" m/s\",\n    values: filteredData.map(function (entry) {\n      return entry.direction;\n    })\n  };\n});\n\n// Configure the chart options\nreturn {\n  title: 'Windspeed',\n  tooltip: {},\n  legend: {\n    data: intervals.map(function (interval) {\n      return interval.start + \"-\" + interval.end + \" m/s\";\n    }),\n    align: 'left',\n    left: 10\n  },\n  polar: {},\n  angleAxis: {\n    type: 'category',\n    data: ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW']\n  },\n  radiusAxis: {},\n  series: data.map(function (interval) {\n    return {\n      type: 'bar',\n      stack: 'windrose',\n      name: interval.interval,\n      data: interval.values\n    };\n  }),\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  }\n};",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        }
      },
      "pluginVersion": "9.3.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\n  |> filter(fn: (r) => r[\"_field\"] == \"windSpeedMetersPerSecond\")\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "windSpeed"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\n  |> filter(fn: (r) => r[\"_field\"] == \"windDirectionTrue\")\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> aggregateWindow(every: 5m, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "windDirection"
        }
      ],
      "title": "Wind Speed and Direction (WIMDA)",
      "transformations": [],
      "transparent": true,
      "type": "volkovlabs-echarts-panel"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "001e0610c0e4",
          "value": "001e0610c0e4"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "influxdb-uid"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(bucket: \"SharedAirDFW\", tag: \"device_id\")",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "device_id",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(bucket: \"SharedAirDFW\", tag: \"device_id\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "Central Hub 8",
          "value": "Central Hub 8"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "influxdb-uid"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(bucket: \"SharedAirDFW\", tag: \"device_name\")",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "device_name",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(bucket: \"SharedAirDFW\", tag: \"device_name\")",
        "refresh": 1,
        "regex": "^.*Central.*$",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-2d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "apache",
  "uid": "e38eaf02-eeca-46a4-aaea-776eb3c24385",
  "version": 1,
  "weekStart": ""
}