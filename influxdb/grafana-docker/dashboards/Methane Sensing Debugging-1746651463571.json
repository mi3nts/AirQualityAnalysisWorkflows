{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 194,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 9,
        "x": 0,
        "y": 0
      },
      "id": 62,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^deviceName \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"firmwareVersion\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ADEV Device Name",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 9,
        "y": 0
      },
      "id": 63,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^manufacturer \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"manufacturer\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ADEV Manufacturer",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 14,
        "y": 0
      },
      "id": 64,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"serialNumber\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ADEV Serial Number",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 19,
        "y": 0
      },
      "id": 61,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"firmwareVersion\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ADEV Firmware ",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 9,
        "x": 0,
        "y": 3
      },
      "id": 77,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^deviceName \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANAM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gaseraName\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ANAM gaseraName",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 9,
        "y": 3
      },
      "id": 165,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASTS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ASTS deviceStatus",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 12,
        "y": 3
      },
      "id": 71,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^localIp \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"localIp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _value: string(v: r._value) })) \r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "localIp",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 16,
        "y": 3
      },
      "id": 67,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^useDHCP \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"useDHCP\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ANET useDHCP",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 20,
        "y": 3
      },
      "id": 73,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^gaseraDateTime \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACLK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gaseraDateTime\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ACLK gaseraDateTime",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 0,
        "y": 6
      },
      "id": 65,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^gaseraIP \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gaseraIP\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ANET IP",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 6,
        "y": 6
      },
      "id": 68,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^netmask \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"netmask\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ANET netmask",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 12,
        "y": 6
      },
      "id": 72,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^publicIp \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"IP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"publicIp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _value: string(v: r._value) })) \r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "publicIp",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 16,
        "y": 6
      },
      "id": 70,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^ConnectionStatus \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ConnectionStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001CS\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001CS ConnectionStatus",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 20,
        "y": 6
      },
      "id": 97,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^ConnectionStatus \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001CS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001CS taskID",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 0,
        "y": 9
      },
      "id": 66,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^gateway \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gateway\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ANET gateway",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 6,
        "y": 9
      },
      "id": 69,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^hostIP \\{device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"\\}$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001CS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"hostIP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001CS hostIP",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmwareVersion"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Firmware"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 12,
        "y": 9
      },
      "id": 78,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASTR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"selfTestResult\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"deviceName\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ASTR selfTestResult",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "firmware_version"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "firmware_version"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 16,
        "y": 9
      },
      "id": 115,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"firmware_version\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"customer_calibration_time\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET firmware_version",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "sensor_type"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "sensor_type"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "serial_number"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "serial_number"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 20,
        "y": 9
      },
      "id": 121,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sensor_type\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"serial_number\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET serial_number",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "activeError1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "activeError1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "activeError2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "activeError2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "activeError3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "activeError3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "activeError4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "activeError4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "activeError0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "activeError0"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "id": 74,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AERR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeError0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AERR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeError1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AERR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeError2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AERR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeError3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AERR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"activeError4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001AERR Active Error",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "parameter0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "parameter0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "parameter1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "parameter1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "parameter2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "parameter2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "parameter3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "parameter3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "parameter4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "parameter4"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "id": 75,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMPS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"parameter0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> rename(columns: {_value: \"parameter0\"})\r\n  |> drop(columns: [\"_time\"]) \r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMPS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"parameter1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> rename(columns: {_value: \"parameter1\"})\r\n  |> drop(columns: [\"_time\"]) \r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMPS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"parameter2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> rename(columns: {_value: \"parameter2\"})\r\n  |> drop(columns: [\"_time\"]) \r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMPS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"parameter3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> rename(columns: {_value: \"parameter3\"})\r\n  |> drop(columns: [\"_time\"]) \r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMPS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"parameter4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> rename(columns: {_value: \"parameter4\"})\r\n  |> drop(columns: [\"_time\"]) \r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001AMPS parameter",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepBefore",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "GSR001AMST",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 76,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMST\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"measurementStatusCode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "GSR001AMST-measurementStatusCode",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Carbon Dioxide",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 21,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"carbonDioxide\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-Carbon Dioxide",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "INIR2ME5",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "conppb"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 24
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"methane\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-Methane",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Carbon Monoxide",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 24
      },
      "id": 25,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"carbonMonoxide\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-Carbon Monoxide",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "SJH5",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "conppb"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 32
      },
      "id": 16,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"methane\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "SJH5-Methane",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Methane",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 32
      },
      "id": 22,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"methane\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-Methane",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "methaneEQBusVoltage",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 40
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TGS2611C00\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"methaneEQBusVoltage\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "TGS2611C00-Methane",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-blues"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Water",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 40
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"water\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-Water",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "displayName": "timeElapsed",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 0,
        "y": 48
      },
      "id": 127,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TGS2611C00\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"timeElapsed\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "TGS2611C00-timeElapsed",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "continuous-YlBl"
          },
          "decimals": 0,
          "displayName": "warmUpStatus",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 8,
        "y": 48
      },
      "id": 128,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"TGS2611C00\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"warmUpStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "TGS2611C00-warmUpStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 31,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "nitrousOxide",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 48
      },
      "id": 24,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"nitrousOxide\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON- Nitrous Oxide",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "act1SecAverage",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 55
      },
      "id": 37,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"act1SecAverage\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-act1SecAverage",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 35,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Dew Point",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 56
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dewPoint\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Dew Point",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "orange",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "crc",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 63
      },
      "id": 38,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"crc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-crc",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "nitrousOxide",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pitch"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Pitch"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "roll"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Roll"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 64
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"YXXDR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"pitch\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "Pitch"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"YXXDR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"roll\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "YXXDR- Pitch & Roll",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-orange",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "crc1sComp",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 71
      },
      "id": 39,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"crc1sComp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-crc1sComp",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "D"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 1
              },
              {
                "id": "displayName",
                "value": "Dew Point"
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "T"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "continuous-GrYlRd"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 1
              },
              {
                "id": "displayName",
                "value": "Temperature"
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "fill": "solid"
                }
              },
              {
                "id": "custom.gradientMode",
                "value": "scheme"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "Delta"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    0,
                    10
                  ],
                  "fill": "dot"
                }
              },
              {
                "id": "displayName",
                "value": "Delta (Temp - Dewpoint)"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 9,
        "x": 12,
        "y": 72
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dewPoint\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"airTemperature\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "T"
        },
        {
          "datasource": {
            "name": "Expression",
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "$T-$D",
          "hide": false,
          "refId": "Delta",
          "type": "math"
        }
      ],
      "title": "Dew Point Delta",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "D"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Dew Point"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "T"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Temperature"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "Delta"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Delta (Temp - Dewpoint)"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 21,
        "y": 72
      },
      "id": 10,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"airTemperature\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "T"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"dewPoint\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "D"
        },
        {
          "datasource": {
            "name": "Expression",
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "$T-$D",
          "hide": false,
          "refId": "Delta",
          "type": "math"
        }
      ],
      "title": "Dew Point Delta ",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "ref1SecAverage",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 79
      },
      "id": 40,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ref1SecAverage\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-ref1SecAverage",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 79
      },
      "id": 27,
      "pconfig": {
        "layout": {
          "autosize": false,
          "font": {
            "color": "rgb(110,110,110)",
            "family": "\"Open Sans\", Helvetica, Arial, sans-serif"
          },
          "hovermode": "closest",
          "legend": {
            "orientation": "v"
          },
          "paper_bgcolor": "transparent",
          "plot_bgcolor": "transparent",
          "polar": {
            "angularaxis": {
              "direction": "clockwise",
              "dtick": 22.5,
              "rotation": 90
            },
            "radialaxis": {
              "angle": 90,
              "ticksuffix": "%"
            }
          },
          "showlegend": true
        },
        "mapping": {
          "color": "@index",
          "x": "windAngle {device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"}",
          "y": "windSpeed {device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"}"
        },
        "settings": {
          "color_option": "ramp",
          "displayModeBar": false,
          "marker": {
            "color": "#33B5E5",
            "colorscale": "YIOrRd",
            "showscale": true,
            "size": 15,
            "sizemin": 3,
            "sizemode": "diameter",
            "sizeref": 0.2,
            "symbol": "circle"
          },
          "petals": 45,
          "plot": "windrose",
          "wind_speed_interval": 0.25
        }
      },
      "pluginVersion": "9.3.6",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMWV\")\n  |> filter(fn: (r) => r[\"_field\"] == \"windSpeed\")\n\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "windSpeed"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMWV\")\n  |> filter(fn: (r) => r[\"_field\"] == \"windAngle\")\n\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "windDirection"
        }
      ],
      "title": "Wind Speed and Direction (WIMDA)",
      "transformations": [],
      "transparent": true,
      "type": "fatcloud-windrose-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "temperature",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 87
      },
      "id": 41,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-temperature",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 35,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Temperature",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 88
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"airTemperature\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA-Temperature",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "faultCode",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 95
      },
      "id": 42,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"faultCode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-faultCode",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 35,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Pressure (Bar)",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "pressurebar"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 96
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"barrometricPressureBars\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA-Pressure (Bar)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "displayName": "timeElapsed",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 103
      },
      "id": 43,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"timeElapsed\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-timeElapsed",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 35,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Pressure (Mercury)",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "pressurehg"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 104
      },
      "id": 129,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"barrometricPressureMercury\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA-Pressure (Mercury)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "timeElapsed",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 111
      },
      "id": 58,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"faultCode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5-faultCode",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 35,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Relative Humidity",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 112
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"relativeHumidity\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA-Humidity",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Act_1s_Average_Calibrate",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 119
      },
      "id": 98,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"Act_1s_Average_Calibrate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5SET-Act_1s_Average_Calibrate",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 35,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "checkSum",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 120
      },
      "id": 140,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"checkSum\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA-checkSum",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "Ref_1s_Average_Calibrate",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 127
      },
      "id": 99,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"Ref_1s_Average_Calibrate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5SET-Ref_1s_Average_Calibrate",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd",
            "seriesBy": "last"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "BME280"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "BME280"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "SCD30"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SCD30"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "BME680"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "BME680"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "WIMDA"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "continuous-YlBl"
                }
              },
              {
                "id": "displayName",
                "value": "Airmar"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "A"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Wet Bulb Temperature"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 128
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"BME280\")\n  |> filter(fn: (r) => r[\"_field\"] == \"dewPoint\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "BME280"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"BME680\")\n  |> filter(fn: (r) => r[\"_field\"] == \"dewPoint\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "BME680"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${INFLUXDB}"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\n  |> filter(fn: (r) => r[\"_field\"] == \"dewPoint\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"relativeHumidity\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "H"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"airTemperature\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "T"
        },
        {
          "datasource": {
            "name": "Expression",
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "$T  *  (0.151977 * ( ( $H + 8.313659)**(1/2))) + $D  * ( 1 -(0.151977 * ( ( $H + 8.313659)**(0.5))))",
          "hide": false,
          "refId": "A",
          "type": "math"
        }
      ],
      "title": "WIMDA-Wetbulb Temperature (℃) (Calculated)",
      "transformations": [],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "alphaneg_coeff",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 135
      },
      "id": 103,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"alphaneg_coeff\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5SET-alphaneg_coeff",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "ATUnits",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 12,
        "y": 136
      },
      "id": 130,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ATUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "BPBUnits",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 14,
        "y": 136
      },
      "id": 131,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"BPBUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "BPMUnits",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 16,
        "y": 136
      },
      "id": 132,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"BPMUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "DPUnits",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 18,
        "y": 136
      },
      "id": 133,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"DPUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WDMUnits",
          "mappings": [],
          "noValue": "NULL",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 20,
        "y": 136
      },
      "id": 134,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"WDMUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WSKUnits",
          "mappings": [],
          "noValue": "NULL",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 22,
        "y": 136
      },
      "id": 136,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"WSKUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "averaging",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 143
      },
      "id": 105,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"averaging\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5SET-averaging",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WSMPSUnits",
          "mappings": [],
          "noValue": "NULL",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 12,
        "y": 143
      },
      "id": 137,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"WSMPSUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WTUnits",
          "mappings": [],
          "noValue": "NULL",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 14,
        "y": 143
      },
      "id": 138,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"WTUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WDTUnits",
          "mappings": [],
          "noValue": "NULL",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 16,
        "y": 143
      },
      "id": 135,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"WDTUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "warmUpStatus",
          "mappings": [],
          "noValue": "No Data",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 18,
        "y": 143
      },
      "id": 139,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"warmUpStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA warmUpStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WSUnits",
          "mappings": [],
          "noValue": "NULL",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 20,
        "y": 143
      },
      "id": 143,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMWV\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"WSUnits\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMWV",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "status",
          "mappings": [],
          "noValue": "NULL",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 22,
        "y": 143
      },
      "id": 144,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMWV\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"status\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMWV",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WindDirMag",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 12,
        "y": 150
      },
      "id": 141,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"windDirectionMagnetic\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA-WindDirMag",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "WindDirTrue",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 15,
        "y": 150
      },
      "id": 142,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMDA\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"windDirectionTrue\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMDA-WindDirTrue",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "windAngle",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 18,
        "y": 150
      },
      "id": 146,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMWV\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"windAngle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMWV-windAngle",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "windSpeed",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "velocityms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 21,
        "y": 150
      },
      "id": 147,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMWV\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"windSpeed\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "WIMWV-windAngle",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "betaneg_coeff_high_range"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "betaneg_coeff_high_range"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "betaneg_coeff_low_range"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "betaneg_coeff_low_range"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "betaneg_coeff_mid_range"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "betaneg_coeff_mid_range"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 151
      },
      "id": 107,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betaneg_coeff_high_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betaneg_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betaneg_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "INIR2ME5SET-betaneg_coeff range",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 35,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "checkSum",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 157
      },
      "id": 145,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WIMWV\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"checkSum\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "WIMWV-checkSum",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "high_span_gas_conc"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "high_span_gas_conc"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "low_span_gas_conc"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "low_span_gas_conc"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "betapos_coeff_low_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "betapos_coeff_low_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 159
      },
      "id": 116,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"high_span_gas_conc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"low_span_gas_conc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET-span_gas_conc ",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "a_coeff_high_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "a_coeff_high_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "a_coeff_mid_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "a_coeff_mid_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "a_coeff_low_range"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "a_coeff_low_range"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 164
      },
      "id": 100,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"a_coeff_high_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"a_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"a_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET-a_coeff range",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kelvin"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "calibration_temperature"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "calibration temperature"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 167
      },
      "id": 111,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"calibration_temperature\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET calibration temperature",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "orange",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "alphapos_coeff",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 172
      },
      "id": 104,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"alphapos_coeff\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5SET-alphapos_coeff",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "val_crc"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "val_crc"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 175
      },
      "id": 124,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"val_crc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET val_crc",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "baud_rate",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 180
      },
      "id": 106,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"baud_rate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "INIR2ME5SET-baud_rate",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "offset"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "offset"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 183
      },
      "id": 119,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"offset\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET offset",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "betapos_coeff_high_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "betapos_coeff_high_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "betapos_coeff_mid_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "betapos_coeff_mid_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "betapos_coeff_low_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "betapos_coeff_low_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 188
      },
      "id": 110,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_high_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET-betapos_coeff range",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "span"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "span"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 191
      },
      "id": 122,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"span\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET span",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "n_coeff_high_conc"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "n_coeff_high_conc"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "n_coeff_mid_conc"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "n_coeff_mid_conc"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "n_coeff_low_conc"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "n_coeff_low_conc"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 196
      },
      "id": 118,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"n_coeff_high_conc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"n_coeff_mid_conc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"n_coeff_low_conc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET-n_coeff_conc ",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "customer_calibration_date"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "customer_calibration_date"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "customer_calibration_time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "customer_calibration_time"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 5,
        "x": 0,
        "y": 199
      },
      "id": 114,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"customer_calibration_date\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"customer_calibration_time\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET customer calibration date and time",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "sensor_type"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "sensor_type"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "serial_number"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "serial_number"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 5,
        "x": 5,
        "y": 199
      },
      "id": 120,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sensor_type\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"serial_number\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET sensor_type",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "conc_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "conc_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 12,
        "y": 204
      },
      "id": 112,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"conc_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET conc_range",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "current_conc_range"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "current_conc_range"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 20,
        "y": 204
      },
      "id": 113,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"current_conc_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET current_conc_range",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "displayName": "elapsedTime",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 207
      },
      "id": 44,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"elapsedTime\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-elapsedTime",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "inv_crc"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "inv_crc"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 212
      },
      "id": 117,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"inv_crc\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET inv_crc",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "displayName": "elapsedTimePeriodicCheck",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 215
      },
      "id": 46,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"elapsedTimePeriodicCheck\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-elapsedTimePeriodicCheck",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "time_delay_ms"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "time_delay_ms"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 220
      },
      "id": 123,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"time_delay_ms\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET time_delay_ms",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "elapsedTimeSinceDailyCheck",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dtdurations"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 223
      },
      "id": 45,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"elapsedTimeSinceDailyCheck\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-elapsedTimeSinceDailyCheck",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "zero"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "zero"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 228
      },
      "id": 125,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"Mints Anemometer 01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"zero\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_mid_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"INIR2ME5SET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"betapos_coeff_low_range\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        }
      ],
      "title": "INIR2ME5SET zero",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "iterationNumber",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 231
      },
      "id": 47,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"iterationNumber\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ACON-iterationNumber",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "measurementStatusCode",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 236
      },
      "id": 49,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMST\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"measurementStatusCode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001AMST-measurementStatusCode",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "iterationNumber",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 239
      },
      "id": 48,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AITR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"iterationNumber\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001AITR-iterationNumber",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "measurementStatusCode",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 244
      },
      "id": 50,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANAM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"measurementStatusCode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ANAM-measurementStatusCode",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "measurementStatusCode",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 247
      },
      "id": 51,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"measurementStatusCode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "GSR001ANET-measurementStatusCode",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 10,
        "x": 12,
        "y": 252
      },
      "id": 59,
      "options": {
        "autoSizeColumns": true,
        "autoSizePolygons": true,
        "autoSizeRows": true,
        "compositeConfig": {
          "animationSpeed": "1500",
          "composites": [],
          "enabled": true
        },
        "compositeGlobalAliasingEnabled": false,
        "ellipseCharacters": 18,
        "ellipseEnabled": false,
        "globalAutoScaleFonts": true,
        "globalClickthrough": "",
        "globalClickthroughCustomTarget": "",
        "globalClickthroughCustomTargetEnabled": false,
        "globalClickthroughNewTabEnabled": true,
        "globalClickthroughSanitizedEnabled": true,
        "globalDecimals": 0,
        "globalDisplayMode": "all",
        "globalDisplayTextTriggeredEmpty": "OK",
        "globalFillColor": "dark-green",
        "globalFontSize": 12,
        "globalGradientsEnabled": true,
        "globalOperator": "last",
        "globalPolygonBorderColor": "rgba(0, 0, 0, 0)",
        "globalPolygonBorderSize": 2,
        "globalPolygonSize": 25,
        "globalRegexPattern": "",
        "globalShape": "hexagon_pointed_top",
        "globalShowTimestampEnabled": false,
        "globalShowTimestampFontSize": 12,
        "globalShowTimestampFormat": "YYYY-MM-DD HH:mm:ss",
        "globalShowTimestampPosition": "below_value",
        "globalShowTimestampYOffset": 0,
        "globalShowTooltipColumnHeadersEnabled": true,
        "globalShowValueEnabled": true,
        "globalTextFontAutoColorEnabled": true,
        "globalTextFontColor": "#000000",
        "globalTextFontFamily": "Roboto",
        "globalThresholdsConfig": [],
        "globalTooltipsEnabled": true,
        "globalTooltipsFontFamily": "Arial",
        "globalTooltipsShowTimestampEnabled": true,
        "globalTooltipsShowValueEnabled": true,
        "globalUnitFormat": "short",
        "layoutDisplayLimit": 100,
        "layoutNumColumns": 8,
        "layoutNumRows": 8,
        "overrideConfig": {
          "overrides": []
        },
        "sortByDirection": 1,
        "sortByField": "name",
        "tooltipDisplayMode": "all",
        "tooltipDisplayTextTriggeredEmpty": "OK",
        "tooltipPrimarySortByField": "thresholdLevel",
        "tooltipPrimarySortDirection": 1,
        "tooltipSecondarySortByField": "value",
        "tooltipSecondarySortDirection": 1
      },
      "pluginVersion": "2.1.14",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MCDOverLimitStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RCDOverLimitStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"calibrationStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"highHumidityStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"malFunctionStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "E"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rangeStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "F"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"rangeStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "G"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"warmUpStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "H"
        }
      ],
      "title": "SJH5-StatusCodes",
      "transparent": true,
      "type": "grafana-polystat-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ACLK",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 0,
        "y": 255
      },
      "id": 148,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACLK\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ACON",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 2,
        "y": 255
      },
      "id": 149,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ADEV",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 4,
        "y": 255
      },
      "id": 150,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001AERR",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 6,
        "y": 255
      },
      "id": 151,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AERR\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001AITR",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 8,
        "y": 255
      },
      "id": 152,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AITR\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001AMPS",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 10,
        "y": 255
      },
      "id": 153,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMPS\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001AMST",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 0,
        "y": 262
      },
      "id": 154,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMST\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ANAM",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 2,
        "y": 262
      },
      "id": 155,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANAM\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ANET",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 4,
        "y": 262
      },
      "id": 156,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ASTR",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 6,
        "y": 262
      },
      "id": 157,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASTR\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ASTS",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 8,
        "y": 262
      },
      "id": 158,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASTS\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ASYP",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 10,
        "y": 262
      },
      "id": 159,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-green",
            "mode": "continuous-YlBl"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "displayName": "timeElapsed",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 266
      },
      "id": 126,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SJH5\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"timeElapsed\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "SJH5-timeElapsed",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ATSK",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 0,
        "y": 269
      },
      "id": 160,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001ATSP",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 2,
        "y": 269
      },
      "id": 161,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001STAM",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 4,
        "y": 269
      },
      "id": 162,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001STAM\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001STPM",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 6,
        "y": 269
      },
      "id": 163,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001STPM\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "displayName": "GSR001STST",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 8,
        "y": 269
      },
      "id": 164,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001STST\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "errorStatus",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001ACLK"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 276
      },
      "id": 29,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACLK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACLK"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ACLK_Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001ACON"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 280
      },
      "id": 30,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACLK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACLK"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACON\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ACON Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001ADEV"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 284
      },
      "id": 31,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ACLK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACLK"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ADEV\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ADEV Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001AITR"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 288
      },
      "id": 32,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AITR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001AITR Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001AMPS"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 292
      },
      "id": 33,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMPS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001AMPS Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001AMST"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 296
      },
      "id": 34,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001AMST\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001AMST Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001ANAM"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 300
      },
      "id": 35,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANAM\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ANAM Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "errorStatus"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GSR001ANET"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 304
      },
      "id": 36,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"errorStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ANET Status",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "useDHCP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "useDHCP"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 308
      },
      "id": 52,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ANET\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"useDHCP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ANET useDHCP",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "useDHCP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "useDHCP"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 312
      },
      "id": 53,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASTR\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"useDHCP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ASTR-useDHCP",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "useDHCP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "useDHCP"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 316
      },
      "id": 54,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASTS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"useDHCP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ASTS-useDHCP",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "useDHCP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "useDHCP"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 320
      },
      "id": 55,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASTS\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"useDHCP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ASTS-useDHCP",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "useDHCP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "useDHCP"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 324
      },
      "id": 56,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"useDHCP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ASYP-useDHCP",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-green",
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "useDHCP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "useDHCP"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 328
      },
      "id": 57,
      "options": {
        "colWidth": 0.5,
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "rowHeight": 0.5,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"useDHCP\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "GSR001ACON"
        }
      ],
      "title": "GSR001ATSK-useDHCP",
      "transparent": true,
      "type": "status-history"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "AllowNegResults"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "AllowNegResults"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "BGCompensationInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "BGCompensationInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ChannelGroupWaveNStepSize"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ChannelGroupWaveNStepSize"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CompensationCompId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CompensationCompId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ContinuousPumping"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ContinuousPumping"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "DeviceType"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "DeviceType"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "DisableScanTuning"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "DisableScanTuning"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "FlushTimeBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "FlushTimeBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "FlushTimeCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "FlushTimeCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "GasExForEachChannel"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GasExForEachChannel"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "GasInput"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "GasInput"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "InternalTimeout"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "InternalTimeout"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ExternalTimeout"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ExternalTimeout"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 17,
        "w": 24,
        "x": 0,
        "y": 332
      },
      "id": 79,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"AllowNegResults\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"BGCompensationInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ChannelGroupWaveNStepSize\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"CompensationCompId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ContinuousPumping\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"DeviceType\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"DisableScanTuning\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"DisableScanTuning\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ExternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"FlushTimeBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"FlushTimeCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"GasExForEachChannel\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"GasInput\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ASYP ",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax9 {device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMax12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMax12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 349
      },
      "id": 80,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax5\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMax12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ASYP PPMRangeMax",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin6 {device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PPMRangeMin12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PPMRangeMin12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 357
      },
      "id": 81,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin5\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PPMRangeMin12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ASYP PPMRangeMin",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVComponentIdCh12 {device_id=\"001e064a872f\", device_name=\"Mints Anemometer 01\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 365
      },
      "id": 82,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh5\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVComponentIdCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ASYP STDVComponentIdCh",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 373
      },
      "id": 83,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh5\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ASYP STDVMPSInletCh",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "taskID0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 9,
        "x": 0,
        "y": 381
      },
      "id": 84,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSK taskID",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskName0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 9,
        "y": 381
      },
      "id": 85,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSK taskName0",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskName1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 12,
        "y": 381
      },
      "id": 86,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSK taskName1",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskName2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 15,
        "y": 381
      },
      "id": 87,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSK taskName2",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskName3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 18,
        "y": 381
      },
      "id": 88,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSK taskName3",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskName4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 21,
        "y": 381
      },
      "id": 89,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSK taskName4",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "casNumbers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 15,
        "x": 9,
        "y": 384
      },
      "id": 91,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"casNumbers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> drop(columns: [\"_time\"])\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSP casNumbers",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "taskID0"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 388
      },
      "id": 90,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSP taskName0",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cellFlushCycles"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "cellFlushCycles"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 388
      },
      "id": 92,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"cellFlushCycles\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSP cellFlushCycles",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "flushTimeBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "flushTimeBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 8,
        "y": 388
      },
      "id": 93,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"flushTimeBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSP flushTimeBypass",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "flushTimeCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "cellFlushCycles"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 12,
        "y": 388
      },
      "id": 94,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"flushTimeCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSP flushTimeCell",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "flushTimeCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "cellFlushCycles"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 16,
        "y": 388
      },
      "id": 95,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"targetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSP flushTimeCell",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb-uid"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "flushTimeCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "cellFlushCycles"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID3"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID3"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "taskID4"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "taskID4"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh5"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh5"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh6"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh6"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh7"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh7"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh8"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh8"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh9"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh9"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh10"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVComponentIdCh10"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh11"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh11"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STDVMPSInletCh12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "STDVMPSInletCh12"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IntervalEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IntervalEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset1"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LaserTuneStartOffset2"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LaserTuneStartOffset2"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LoggingEnabled"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "LoggingEnabled"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ModbusSlaveId"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ModbusSlaveId"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MovingAvgInterval"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "MovingAvgInterval"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushBypass"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushBypass"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NFlushCell"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NFlushCell"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NumberOfLasers"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "NumberOfLasers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PumpRate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PumpRate"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenance"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RemoteMaintenanceVisible"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RemoteMaintenanceVisible"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SamplingMode"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SamplingMode"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TargetPressure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TargetPressure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeIdle"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeIdle"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageTimeMeasure"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UsageTimeMeasure"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisAutoscaleOn"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisAutoscaleOn"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMax"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMax"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "y-AxisMin"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "y-AxisMin"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 388
      },
      "id": 96,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": false,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "E",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "B",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID3\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "C",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskID4\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "D",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ATSK\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"taskName0\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "F",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh6\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "G",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh7\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "H",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh8\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "I",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh9\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "J",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh10\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "K",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh11\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "L",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"STDVMPSInletCh12\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "M",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"InternalTimeout\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "N",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"IntervalEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "O",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset1\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "P",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LaserTuneStartOffset2\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Q",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LoggingEnabled\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "R",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ModbusSlaveId\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "S",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"MovingAvgInterval\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "T",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushBypass\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "U",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NFlushCell\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "V",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"NumberOfLasers\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "W",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"PumpRate\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "X",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenance\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Y",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"RemoteMaintenanceVisible\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "Z",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"SamplingMode\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AA",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TargetPressure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AB",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeIdle\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AC",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"UsageTimeMeasure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AD",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisAutoscaleOn\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AE",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMax\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AF",
          "units": "none",
          "valueHandler": "Number Threshold"
        },
        {
          "$$hashKey": "object:24",
          "aggregation": "Last",
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb-uid"
          },
          "decimals": 2,
          "displayAliasType": "Warning / Critical",
          "displayType": "Regular",
          "displayValueWithAlias": "Never",
          "hide": true,
          "query": "from(bucket: \"SharedAirDFW\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"${device_name}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"GSR001ASYP\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"y-AxisMin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "AG",
          "units": "none",
          "valueHandler": "Number Threshold"
        }
      ],
      "title": "GSR001ATSP taskID",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Mints Anemometer 01",
          "value": "Mints Anemometer 01"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "influxdb-uid"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(bucket: \"SharedAirDFW\", tag: \"device_name\")",
        "hide": 0,
        "includeAll": false,
        "label": "Device Name",
        "multi": false,
        "name": "device_name",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(bucket: \"SharedAirDFW\", tag: \"device_name\")",
        "refresh": 1,
        "regex": "^.*Mints.Anemometer.*$",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Methane Sensing Debugging",
  "uid": "f5b835cb-6a90-4d2d-aaf7-5f2891573a97",
  "version": 278,
  "weekStart": ""
}