[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Central Node to InfluxDB",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b44edfff80da0ecb",
        "type": "tab",
        "label": "LoRa Node to InfluxDB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eeac082b50da81c5",
        "type": "mqtt-broker",
        "name": "Central Nodes Reader",
        "broker": "mqtt.circ.utdallas.edu",
        "port": "8883",
        "tls": "a262c54bb2fd3604",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a262c54bb2fd3604",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "ca-certificates.crt",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "13a2a6da2720468e",
        "type": "mqtt-broker",
        "name": "Lora Nodes Reader",
        "broker": "mqtt.lora.trecis.cloud",
        "port": "1883",
        "tls": "910f682d4a225c76",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "910f682d4a225c76",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "ca-certificates.crt",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "6d81027f06ed63bd",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "a262c54bb2fd3604",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "373fa459.54e07c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "WEATHER",
        "name": "Weather",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x"
    },
    {
        "id": "5c3a4e27.a99f9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.203",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "eeb221fb.ab27f",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "test",
        "usetls": true,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "16bed9e221e11523",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "test 1.8 flux",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "1.8-flux",
        "url": "https://localhost:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "1d1b734fb1eec314",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "https://localhost:9999",
        "rejectUnauthorized": false
    },
    {
        "id": "70712986916c3b26",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "AS3935",
        "topic": "+/AS3935",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "594dae494bf3c3e8"
            ]
        ]
    },
    {
        "id": "9d5c25cd3d7a159e",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "AS6272",
        "topic": "+/AS6272",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 200,
        "wires": [
            [
                "751527d9d035d5a0"
            ]
        ]
    },
    {
        "id": "751527d9d035d5a0",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "fa409987246429a7"
            ]
        ]
    },
    {
        "id": "fa409987246429a7",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 900,
        "y": 200,
        "wires": []
    },
    {
        "id": "5040ce7af43b87a1",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "BME280",
        "topic": "+/BME280",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 340,
        "wires": [
            [
                "1517583cd0da58db"
            ]
        ]
    },
    {
        "id": "1517583cd0da58db",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "15d4fbb82213996f"
            ]
        ]
    },
    {
        "id": "6641e5c283fb535a",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "BME680",
        "topic": "+/BME680",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 480,
        "wires": [
            [
                "6a2465e3421dd978"
            ]
        ]
    },
    {
        "id": "6a2465e3421dd978",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 480,
        "wires": [
            [
                "03db26f26e3ac9a1"
            ]
        ]
    },
    {
        "id": "053f9aa527cb9111",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "GL001",
        "topic": "+/GL001",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 620,
        "wires": [
            [
                "1975923ab1c94b42"
            ]
        ]
    },
    {
        "id": "1975923ab1c94b42",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 620,
        "wires": [
            [
                "5a95e97e58b21e89"
            ]
        ]
    },
    {
        "id": "9fae0802dde62e3a",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "GPGGA",
        "topic": "+/GPGGA",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 720,
        "wires": [
            [
                "842063d6ddb04e71"
            ]
        ]
    },
    {
        "id": "842063d6ddb04e71",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 720,
        "wires": [
            [
                "ec7a7946d17b0bca"
            ]
        ]
    },
    {
        "id": "ecd05a595e298c3c",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "GPSGPGGA2",
        "topic": "+/GPSGPGGA2",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 820,
        "wires": [
            [
                "9a857b9545543182"
            ]
        ]
    },
    {
        "id": "9a857b9545543182",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 820,
        "wires": [
            [
                "52f68d0e62bf17ff"
            ]
        ]
    },
    {
        "id": "d74a657c2cb18577",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "GPSGPRMC2",
        "topic": "+/GPSGPRMC2",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 920,
        "wires": [
            [
                "d524e5b21132dd19"
            ]
        ]
    },
    {
        "id": "d524e5b21132dd19",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 920,
        "wires": [
            [
                "ac8dc19361ee0403"
            ]
        ]
    },
    {
        "id": "3f9bf50e7f7c0d38",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "GUV001",
        "topic": "+/GUV001",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1020,
        "wires": [
            [
                "69acc655f907ce82"
            ]
        ]
    },
    {
        "id": "69acc655f907ce82",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "26c1fc6d89c6cb97"
            ]
        ]
    },
    {
        "id": "d70219fe98eb965f",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "HM3301",
        "topic": "+/HM3301",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1120,
        "wires": [
            [
                "476c1f14d210392d"
            ]
        ]
    },
    {
        "id": "476c1f14d210392d",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "1190890671c4a0f9"
            ]
        ]
    },
    {
        "id": "b32de1355b05539a",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "IP",
        "topic": "+/IP",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 1220,
        "wires": [
            [
                "bd67ac553177977c"
            ]
        ]
    },
    {
        "id": "bd67ac553177977c",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 1220,
        "wires": [
            [
                "6d1b179139d0b3e8"
            ]
        ]
    },
    {
        "id": "6d1b179139d0b3e8",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1000,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3cd8b914e2bf9a5c",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "IPS7100",
        "topic": "+/IPS7100",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1320,
        "wires": [
            [
                "20cd3b54aef2bcfd"
            ]
        ]
    },
    {
        "id": "20cd3b54aef2bcfd",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1320,
        "wires": [
            [
                "f29a7a79ac83ec38"
            ]
        ]
    },
    {
        "id": "96a4cb169a1fa7f2",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "MGS001",
        "topic": "+/MGS001",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1520,
        "wires": [
            [
                "918b1d52b5f6d6b1"
            ]
        ]
    },
    {
        "id": "1a80f6e4eb3c3a0c",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1520,
        "wires": [
            [
                "b3439e706f7fb8ca"
            ]
        ]
    },
    {
        "id": "df771b99337b8805",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "OPCN3",
        "topic": "+/OPCN3",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1620,
        "wires": [
            [
                "ab0a93096b38aa81"
            ]
        ]
    },
    {
        "id": "ab0a93096b38aa81",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1620,
        "wires": [
            [
                "7263168d496d9ec0"
            ]
        ]
    },
    {
        "id": "db4db8da8779fd7f",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "SI114x",
        "topic": "+/SI114x",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 1820,
        "wires": [
            [
                "835542919881d7d7"
            ]
        ]
    },
    {
        "id": "835542919881d7d7",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 1820,
        "wires": [
            [
                "49f5c51c7693f7d1"
            ]
        ]
    },
    {
        "id": "49f5c51c7693f7d1",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 920,
        "y": 1820,
        "wires": []
    },
    {
        "id": "68875c98d9a55c42",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "TB108L",
        "topic": "+/TB108L",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1920,
        "wires": [
            [
                "636b6d4815d1088a"
            ]
        ]
    },
    {
        "id": "636b6d4815d1088a",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "871ec94e7b830856"
            ]
        ]
    },
    {
        "id": "e613428806bd976d",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "TMG3993",
        "topic": "+/TMG3993",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 2020,
        "wires": [
            [
                "3b89895febf5d0d9"
            ]
        ]
    },
    {
        "id": "3b89895febf5d0d9",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 2020,
        "wires": [
            [
                "ebd8af303159ed74"
            ]
        ]
    },
    {
        "id": "45db5f2034dcb79d",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "TSL2591",
        "topic": "+/TSL2591",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 2120,
        "wires": [
            [
                "351eb7111d28a46e"
            ]
        ]
    },
    {
        "id": "351eb7111d28a46e",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 2120,
        "wires": [
            [
                "d3e586e2f0480cf4"
            ]
        ]
    },
    {
        "id": "8f0c9b3fcece6f95",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "VEML6075",
        "topic": "+/VEML6075",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 2220,
        "wires": [
            [
                "fc0b32863e2ca205"
            ]
        ]
    },
    {
        "id": "fc0b32863e2ca205",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 2220,
        "wires": [
            [
                "a1161ba646a6bae5"
            ]
        ]
    },
    {
        "id": "9dd50ff43ff0dc81",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "ADPS9002",
        "topic": "+/ADPS9002",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "e31d2f8c10daf91f"
            ]
        ]
    },
    {
        "id": "e31d2f8c10daf91f",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "b630a4a2e13b9472"
            ]
        ]
    },
    {
        "id": "e706b1ff9eeb3349",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "SEN02323",
        "topic": "+/SEN02323",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 2300,
        "wires": [
            [
                "7d7d44666163d5de"
            ]
        ]
    },
    {
        "id": "7d7d44666163d5de",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 2300,
        "wires": [
            [
                "5d86ab020ac1abcc"
            ]
        ]
    },
    {
        "id": "5d86ab020ac1abcc",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 920,
        "y": 2300,
        "wires": []
    },
    {
        "id": "435241d1a0b333cc",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "SKYCAM003",
        "topic": "+/SKYCAM003",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 410,
        "y": 2360,
        "wires": [
            [
                "f634be5859de084f"
            ]
        ]
    },
    {
        "id": "f634be5859de084f",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 2360,
        "wires": [
            [
                "82059b2a9411af04"
            ]
        ]
    },
    {
        "id": "82059b2a9411af04",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 920,
        "y": 2360,
        "wires": []
    },
    {
        "id": "29cd9f83e1ce88a2",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "WIMDA",
        "topic": "+/WIMDA",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 2460,
        "wires": [
            [
                "278c5aa6feda144e"
            ]
        ]
    },
    {
        "id": "278c5aa6feda144e",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 2460,
        "wires": [
            [
                "b0552e9032f8c80b"
            ]
        ]
    },
    {
        "id": "e375be9679786887",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "YXXDR",
        "topic": "+/YXXDR",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 2660,
        "wires": [
            [
                "4e299df659bb1c76"
            ]
        ]
    },
    {
        "id": "4e299df659bb1c76",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "65ca5c9411e32337",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "AS3935 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1120,
        "y": 60,
        "wires": []
    },
    {
        "id": "594dae494bf3c3e8",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "840b98c8f02e3296"
            ]
        ]
    },
    {
        "id": "840b98c8f02e3296",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        source: parseFloat(msg.payload.source),\n        energy: parseFloat(msg.payload.energy),\n        distance: parseFloat(msg.payload.distance)\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 60,
        "wires": [
            [
                "98dc5e46efb323c5",
                "65ca5c9411e32337"
            ]
        ]
    },
    {
        "id": "98dc5e46efb323c5",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 20,
        "wires": []
    },
    {
        "id": "478afaadde4124cb",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Note Receiving any Data!",
        "info": "",
        "x": 150,
        "y": 200,
        "wires": []
    },
    {
        "id": "25621242e2e5cb3a",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "BME280 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 340,
        "wires": []
    },
    {
        "id": "15d4fbb82213996f",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        temperature: parseFloat(msg.payload.temperature),\n        pressure: parseFloat(msg.payload.pressure),\n        humidity: parseFloat(msg.payload.humidity),\n        altitude: parseFloat(msg.payload.altitude),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "25621242e2e5cb3a",
                "74243a7792413e0f"
            ]
        ]
    },
    {
        "id": "74243a7792413e0f",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 300,
        "wires": []
    },
    {
        "id": "36e4f7e968f9d037",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "BME680 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 480,
        "wires": []
    },
    {
        "id": "03db26f26e3ac9a1",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        temperature: parseFloat(msg.payload.temperature),\n        pressure: parseFloat(msg.payload.pressure),\n        humidity: parseFloat(msg.payload.humidity),\n        gas: parseFloat(msg.payload.gas),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 480,
        "wires": [
            [
                "36e4f7e968f9d037",
                "63857ee2d5a04a61"
            ]
        ]
    },
    {
        "id": "63857ee2d5a04a61",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 440,
        "wires": []
    },
    {
        "id": "53fb2a0894c5a2ec",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "GL001 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1090,
        "y": 620,
        "wires": []
    },
    {
        "id": "5a95e97e58b21e89",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        lightLevel: parseFloat(msg.payload.lightLevel),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 620,
        "wires": [
            [
                "53fb2a0894c5a2ec",
                "8045ae2e087cb8eb"
            ]
        ]
    },
    {
        "id": "8045ae2e087cb8eb",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 580,
        "wires": []
    },
    {
        "id": "5effd89cfcda9021",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "GPGGA Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 720,
        "wires": []
    },
    {
        "id": "ec7a7946d17b0bca",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        UTCTimeStamp: parseFloat(msg.payload.UTCTimeStamp),\n        latitude: parseFloat(msg.payload.latitude),\n        latDirection: msg.payload.latDirection,\n        longitude: parseFloat(msg.payload.longitude),\n        lonDirection: msg.payload.lonDirection,\n        gpsQuality: parseFloat(msg.payload.gpsQuality),\n        altitude: parseFloat(msg.payload.altitude),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 720,
        "wires": [
            [
                "5effd89cfcda9021",
                "3325874f38842f12"
            ]
        ]
    },
    {
        "id": "3325874f38842f12",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 680,
        "wires": []
    },
    {
        "id": "69cd5528a453d312",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "GPSGPGGA2 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1120,
        "y": 820,
        "wires": []
    },
    {
        "id": "52f68d0e62bf17ff",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        latitudeCoordinate: parseFloat(msg.payload.latitudeCoordinate),\n        longitudeCoordinate: parseFloat(msg.payload.longitudeCoordinate),\n        latitude: parseFloat(msg.payload.latitude), \n        latitudeDirection: msg.payload.latitudeDirection,\n        longitude: parseFloat(msg.payload.longitude),\n        longitudeDirection: msg.payload.longitudeDirection,\n        altitude: parseFloat(msg.payload.altitude),\n        lat: parseFloat(msg.payload.latitudeCoordinate),\n        lon: parseFloat(msg.payload.longitudeCoordinate),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 820,
        "wires": [
            [
                "69cd5528a453d312",
                "d327a921738aeba9"
            ]
        ]
    },
    {
        "id": "d327a921738aeba9",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 780,
        "wires": []
    },
    {
        "id": "ac7f43191439a55e",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "GPSGPRMC2 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1120,
        "y": 920,
        "wires": []
    },
    {
        "id": "ac8dc19361ee0403",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        latitudeCoordinate: parseFloat(msg.payload.latitudeCoordinate),\n        longitudeCoordinate: parseFloat(msg.payload.longitudeCoordinate),\n        latitude: parseFloat(msg.payload.latitude), \n        latitudeDirection: msg.payload.latitudeDirection,\n        longitude: parseFloat(msg.payload.longitude),\n        longitudeDirection: msg.payload.longitudeDirection,\n        lat: parseFloat(msg.payload.latitudeCoordinate),\n        lat: parseFloat(msg.payload.longitudeCoordinate),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 920,
        "wires": [
            [
                "ac7f43191439a55e",
                "d04f781d08525b8d"
            ]
        ]
    },
    {
        "id": "d04f781d08525b8d",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 880,
        "wires": []
    },
    {
        "id": "5647cd3d4b141b34",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "GUV001 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 1020,
        "wires": []
    },
    {
        "id": "26c1fc6d89c6cb97",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        uvLevel: parseFloat(msg.payload.uvLevel)\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1020,
        "wires": [
            [
                "5647cd3d4b141b34",
                "4bd8d4096c5c8364"
            ]
        ]
    },
    {
        "id": "4bd8d4096c5c8364",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 980,
        "wires": []
    },
    {
        "id": "5a2ae17bcfd34bd6",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "HM3301 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 1120,
        "wires": []
    },
    {
        "id": "1190890671c4a0f9",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        pm1: parseFloat(msg.payload.pm1),\n        pm2_5: parseFloat(msg.payload.pm2_5),\n        pm10: parseFloat(msg.payload.pm10),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1120,
        "wires": [
            [
                "5a2ae17bcfd34bd6",
                "1e5f6d8e993557c9"
            ]
        ]
    },
    {
        "id": "1e5f6d8e993557c9",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d725d072818b709c",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Note Receiving any Data!",
        "info": "",
        "x": 270,
        "y": 1220,
        "wires": []
    },
    {
        "id": "05bd01f34e3c532f",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "IPS7100 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f29a7a79ac83ec38",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        pc0_1: parseFloat(msg.payload.pc0_1),\n        pc0_3: parseFloat(msg.payload.pc0_3),\n        pc0_5: parseFloat(msg.payload.pc0_5),\n        pc1_0: parseFloat(msg.payload.pc1_0),\n        pc2_5: parseFloat(msg.payload.pc2_5),\n        pc5_0: parseFloat(msg.payload.pc5_0),\n        pc10_0: parseFloat(msg.payload.pc10_0),\n        \n        pm0_1: parseFloat(msg.payload.pm0_1),\n        pm0_3: parseFloat(msg.payload.pm0_3),\n        pm0_5: parseFloat(msg.payload.pm0_5),\n        pm1_0: parseFloat(msg.payload.pm1_0),\n        pm2_5: parseFloat(msg.payload.pm2_5),\n        pm5_0: parseFloat(msg.payload.pm5_0),\n        pm10_0: parseFloat(msg.payload.pm10_0),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1320,
        "wires": [
            [
                "05bd01f34e3c532f",
                "b6c7e1324bfcd49b"
            ]
        ]
    },
    {
        "id": "b6c7e1324bfcd49b",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1280,
        "wires": []
    },
    {
        "id": "47707160dd3e824e",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "LIBRAD",
        "topic": "+/LIBRAD",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1420,
        "wires": [
            [
                "5f3f5da85701d4f3"
            ]
        ]
    },
    {
        "id": "5f3f5da85701d4f3",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "6e58c4f2a11b2119"
            ]
        ]
    },
    {
        "id": "52a4a4881137ab7b",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "LIBRAD Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 1420,
        "wires": []
    },
    {
        "id": "6e58c4f2a11b2119",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        countPerMinute: parseFloat(msg.payload.countPerMinute),\n        radiationValue: parseFloat(msg.payload.radiationValue),\n        timeSpent: parseFloat(msg.payload.timeSpent),\n        LIBRADCount: parseFloat(msg.payload.LIBRADCount)\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1420,
        "wires": [
            [
                "52a4a4881137ab7b",
                "4b2392d11c8d98fe"
            ]
        ]
    },
    {
        "id": "4b2392d11c8d98fe",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c879bc2fe35c9391",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "MGS001 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b3439e706f7fb8ca",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        nh3: parseFloat(msg.payload.nh3),\n        co: parseFloat(msg.payload.co),\n        no2: parseFloat(msg.payload.no2),\n        c3h8: parseFloat(msg.payload.c3h8),\n        c4h10: parseFloat(msg.payload.c4h10),\n        ch4: parseFloat(msg.payload.ch4),\n        h2: parseFloat(msg.payload.h2),\n        c2h5oh: parseFloat(msg.payload.c2h5oh),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1520,
        "wires": [
            [
                "c879bc2fe35c9391",
                "7531e5a7bc7b8398"
            ]
        ]
    },
    {
        "id": "7531e5a7bc7b8398",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1480,
        "wires": []
    },
    {
        "id": "918b1d52b5f6d6b1",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "drop spaces",
        "func": "msg.payload = msg.payload.replace(\"c2h5oh  \", \"c2h5oh\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "1a80f6e4eb3c3a0c"
            ]
        ]
    },
    {
        "id": "af2c1635cbf9a48c",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "OPCN3 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 1620,
        "wires": []
    },
    {
        "id": "7263168d496d9ec0",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        valid: parseFloat(msg.payload.valid),\n        binCount0: parseFloat(msg.payload.binCount0),\n        binCount1: parseFloat(msg.payload.binCount1),\n        binCount2: parseFloat(msg.payload.binCount2),\n        binCount3: parseFloat(msg.payload.binCount3),\n        binCount4: parseFloat(msg.payload.binCount4),\n        binCount5: parseFloat(msg.payload.binCount5),\n        binCount6: parseFloat(msg.payload.binCount6),\n        binCount7: parseFloat(msg.payload.binCount7),\n        binCount8: parseFloat(msg.payload.binCount8),\n        binCount9: parseFloat(msg.payload.binCount9),\n        binCount10: parseFloat(msg.payload.binCount10),\n        binCount11: parseFloat(msg.payload.binCount11),\n        binCount12: parseFloat(msg.payload.binCount12),\n        binCount13: parseFloat(msg.payload.binCount13),\n        binCount14: parseFloat(msg.payload.binCount14),\n        binCount15: parseFloat(msg.payload.binCount15),\n        binCount16: parseFloat(msg.payload.binCount16),\n        binCount17: parseFloat(msg.payload.binCount17),\n        binCount18: parseFloat(msg.payload.binCount18),\n        binCount19: parseFloat(msg.payload.binCount19),\n        binCount20: parseFloat(msg.payload.binCount20),\n        binCount21: parseFloat(msg.payload.binCount21),\n        binCount22: parseFloat(msg.payload.binCount22),\n        binCount23: parseFloat(msg.payload.binCount23),\n        \n        bin1TimeToCross: parseFloat(msg.payload.bin1TimeToCross),\n        bin3TimeToCross: parseFloat(msg.payload.bin3TimeToCross),\n        bin5TimeToCross: parseFloat(msg.payload.bin5TimeToCross),\n        bin7TimeToCross: parseFloat(msg.payload.bin7TimeToCross),\n        \n        samplingPeriod: parseFloat(msg.payload.samplingPeriod),\n        humidity: parseFloat(msg.payload.humidity),\n        pm1: parseFloat(msg.payload.pm1),\n        pm2_5: parseFloat(msg.payload.pm2_5),\n        pm10: parseFloat(msg.payload.pm10),\n        \n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1620,
        "wires": [
            [
                "af2c1635cbf9a48c",
                "44fc55d7b2355a82"
            ]
        ]
    },
    {
        "id": "44fc55d7b2355a82",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1580,
        "wires": []
    },
    {
        "id": "57494680e2d81150",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "SCD30",
        "topic": "+/SCD30",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1720,
        "wires": [
            [
                "56b04e9dd9472651"
            ]
        ]
    },
    {
        "id": "56b04e9dd9472651",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 1720,
        "wires": [
            [
                "67e11d8937f1c6d0"
            ]
        ]
    },
    {
        "id": "9dc4014e03e99aa0",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "SCD30 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1090,
        "y": 1720,
        "wires": []
    },
    {
        "id": "67e11d8937f1c6d0",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n        co2: parseFloat(msg.payload.c02),\n        temperature: parseFloat(msg.payload.temperature),\n        humidity: parseFloat(msg.payload.humidity),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1720,
        "wires": [
            [
                "9dc4014e03e99aa0",
                "ce209f606823ea31"
            ]
        ]
    },
    {
        "id": "ce209f606823ea31",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1680,
        "wires": []
    },
    {
        "id": "3ccf6e9a7bf9efb0",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Note Receiving any Data!",
        "info": "",
        "x": 210,
        "y": 1820,
        "wires": []
    },
    {
        "id": "6e5a1c3f1fa8fbd4",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Note Receiving any Data!",
        "info": "",
        "x": 210,
        "y": 2300,
        "wires": []
    },
    {
        "id": "97d8ff8b8ee31bb1",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Note Receiving any Data!",
        "info": "",
        "x": 210,
        "y": 2360,
        "wires": []
    },
    {
        "id": "a052b24ded73d08e",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "TB108L Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 1920,
        "wires": []
    },
    {
        "id": "871ec94e7b830856",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n       ozone: parseFloat(msg.payload.ozone),\n       temperature: parseFloat(msg.payload.temperature),\n       pressure: parseFloat(msg.payload.pressure),\n       voltage: parseFloat(msg.payload.voltage)\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1920,
        "wires": [
            [
                "a052b24ded73d08e",
                "ec9a81e795c5f4f7"
            ]
        ]
    },
    {
        "id": "ec9a81e795c5f4f7",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6e428da3ce8b2857",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "TMG3993 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 2020,
        "wires": []
    },
    {
        "id": "ebd8af303159ed74",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n       infraRed: parseFloat(msg.payload.infraRed),\n       red: parseFloat(msg.payload.red),\n       green: parseFloat(msg.payload.green),\n       blue: parseFloat(msg.payload.blue),\n       proximity: parseFloat(msg.payload.proximity),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2020,
        "wires": [
            [
                "6e428da3ce8b2857",
                "a3efd507038f26c1"
            ]
        ]
    },
    {
        "id": "a3efd507038f26c1",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1980,
        "wires": []
    },
    {
        "id": "ab06fa5d16ec4a01",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "TSL2591 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 2120,
        "wires": []
    },
    {
        "id": "d3e586e2f0480cf4",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n       luminosity: parseFloat(msg.payload.luminosity),\n       ir: parseFloat(msg.payload.ir), \n       full: parseFloat(msg.payload.full),\n       visible: parseFloat(msg.payload.visible),\n       lux: parseFloat(msg.payload.lux),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2120,
        "wires": [
            [
                "ab06fa5d16ec4a01",
                "1f4667806167e646"
            ]
        ]
    },
    {
        "id": "1f4667806167e646",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2080,
        "wires": []
    },
    {
        "id": "fbcac68290292024",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "VEML6075 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1110,
        "y": 2220,
        "wires": []
    },
    {
        "id": "a1161ba646a6bae5",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg.payload = [\n    {\n       rawUVA: parseFloat(msg.payload.rawUVA),\n       rawUVB: parseFloat(msg.payload.rawUVB),\n       irCompensation: parseFloat(msg.payload.irCompensation),\n       uva: parseFloat(msg.payload.uva),\n       uvb: parseFloat(msg.payload.uvb),\n       index: parseFloat(msg.payload.index),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2220,
        "wires": [
            [
                "fbcac68290292024",
                "7670d199db89906a"
            ]
        ]
    },
    {
        "id": "7670d199db89906a",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2180,
        "wires": []
    },
    {
        "id": "b630a4a2e13b9472",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "64fb0ac80d574ff5",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Note Receiving any Data!",
        "info": "",
        "x": 150,
        "y": 140,
        "wires": []
    },
    {
        "id": "11f20d4cfa1b91cf",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "WIMDA Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 2460,
        "wires": []
    },
    {
        "id": "b0552e9032f8c80b",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "wdt = msg.payload.windDirectionTrue;\nif (wdt == \"\") {\n  wdt=0.0;\n} else {\n  wdt=parseFloat(wdt);\n}\n\nwdm = msg.payload.windDirectionMagnetic;\nif (wdm==\"\"){\n    wdm=0.0;\n} else{\n    wdm=parseFloat(wdm);\n}\n\nwsk = msg.payload.windSpeedKnots\nif (wsk==\"\"){\n    wsk=0.0;\n} else{\n    wsk=parseFloat(wsk);\n}\n\nwsmps = msg.payload.windSpeedMetersPerSecond;\nif (wsmps==\"\"){\n    wsmps=0.0;\n} else{\n    wsmps=parseFloat(wsmps);\n}\n\nmsg.payload = [\n    {\n       barrometricPressureMercury: parseFloat(msg.payload.barrometricPressureMercury),\n       barrometricPressureBars: parseFloat(msg.payload.barrometricPressureBars),\n       airTemperature: parseFloat(msg.payload.airTemperature),\n       relativeHumidity: parseFloat(msg.payload.relativeHumidity),\n       dewPoint: parseFloat(msg.payload.dewPoint),\n       windDirectionTrue: parseFloat(wdt),\n       windDirectionMagnetic: parseFloat(wdm),\n       windSpeedKnots: parseFloat(wsk),\n       windSpeedMetersPerSecond: parseFloat(wsmps),\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2460,
        "wires": [
            [
                "11f20d4cfa1b91cf",
                "ed48c7f8355a1b0f"
            ]
        ]
    },
    {
        "id": "ed48c7f8355a1b0f",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2420,
        "wires": []
    },
    {
        "id": "fee9d514d3d2b592",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "WIMWV",
        "topic": "+/WIMWV",
        "qos": "2",
        "datatype": "auto",
        "broker": "eeac082b50da81c5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 2560,
        "wires": [
            [
                "d703562e6e74a901"
            ]
        ]
    },
    {
        "id": "d703562e6e74a901",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 2560,
        "wires": [
            [
                "7dc8e96e0b81aa43"
            ]
        ]
    },
    {
        "id": "55c452a818824055",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "6d81027f06ed63bd",
        "name": "WIMWV Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1100,
        "y": 2560,
        "wires": []
    },
    {
        "id": "7dc8e96e0b81aa43",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "\nmsg.payload = [\n    {\n        windAngle: parseFloat(msg.payload.windAngle),\n        WAReference: msg.payload.WAReference,\n        windSpeed: parseFloat(msg.payload.windSpeed),\n        WSUnits: msg.payload.WSUnits,\n    },\n    {\n        location: msg.topic.split(\"/\")[0]\n    },\n];\n\nmsg.measurement = msg.topic.split(\"/\")[1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2560,
        "wires": [
            [
                "55c452a818824055",
                "42652e648395d212"
            ]
        ]
    },
    {
        "id": "42652e648395d212",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2520,
        "wires": []
    },
    {
        "id": "fa76dadeb20276e5",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Note Receiving any Data!",
        "info": "",
        "x": 210,
        "y": 2660,
        "wires": []
    },
    {
        "id": "9c8cb7de31fcbeef",
        "type": "mqtt in",
        "z": "b44edfff80da0ecb",
        "name": "Read ALL",
        "topic": "utd/lora/app/2/device/+/event/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "13a2a6da2720468e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 320,
        "wires": [
            [
                "64a95fd344edcfe2",
                "f63d50945dfe58be"
            ]
        ]
    },
    {
        "id": "f63d50945dfe58be",
        "type": "json",
        "z": "b44edfff80da0ecb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "be5af487815a3eef",
                "6842602508899c36"
            ]
        ]
    },
    {
        "id": "64a95fd344edcfe2",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 460,
        "wires": []
    },
    {
        "id": "be5af487815a3eef",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 460,
        "wires": []
    },
    {
        "id": "6842602508899c36",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "LoRaSummaryWrite",
        "func": "portIDs = {\n    11: \"OPCN2\",\n    13: \"OPCN3\",\n    15: \"IPS7100\",\n    23: \"BME680\",\n    21: \"BME280\",\n    33: \"SCD30\",\n    31: \"MGS001\",\n    5: \"GPGGALR\",\n    3: \"INA219Duo\",\n    2: \"PM\",\n    1: \"LoRaDefault\",\n};\n\n\nmsg.payload =\n    {\n        sensorID: portIDs[msg.payload.fPort],\n        framePort: msg.payload.fPort,\n        //base16data: Buffer.from(msg.payload.data).toString('base64').toString('hex'),\n        base16data: Buffer.from(msg.payload.data, 'base64').toString('hex'),\n\n        //gatewayID: Buffer.from(msg.payload.rxInfo[0].gatewayID).toString('base64').toString('hex'),\n        gatewayID: Buffer.from(msg.payload.rxInfo[0].gatewayID, 'base64').toString('hex'),\n        \n        nodeID: msg.topic.split(\"/\")[5]\n    };\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 320,
        "wires": [
            [
                "e40c3b22a24d9eb7",
                "b962b6ee4261184e"
            ]
        ]
    },
    {
        "id": "e40c3b22a24d9eb7",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "b962b6ee4261184e",
        "type": "switch",
        "z": "b44edfff80da0ecb",
        "name": "SensorIDCheck",
        "property": "payload.sensorID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IPS7100",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BME280",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SCD30",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "INA219Duo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "MGS001",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GPGGALR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 980,
        "y": 320,
        "wires": [
            [
                "39e83a037102e3e1"
            ],
            [
                "aa018634e3f1d940"
            ],
            [
                "2e760f3050c884c4"
            ],
            [
                "d78d7389e9eb0dc5"
            ],
            [
                "208ea1244486b359"
            ],
            [
                "2677e065208970cf"
            ],
            [
                "565ba56ef806b401"
            ]
        ]
    },
    {
        "id": "ad9565dd3840cf1c",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 100,
        "wires": []
    },
    {
        "id": "f751c36d276bdcf7",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 160,
        "wires": []
    },
    {
        "id": "5483187b79041271",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 220,
        "wires": []
    },
    {
        "id": "2259b78610cbfb38",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 280,
        "wires": []
    },
    {
        "id": "2f6c19eaa27aa369",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 340,
        "wires": []
    },
    {
        "id": "323c60badb4cc0d1",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 400,
        "wires": []
    },
    {
        "id": "3080e9d1dd0f8118",
        "type": "debug",
        "z": "b44edfff80da0ecb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 460,
        "wires": []
    },
    {
        "id": "39e83a037102e3e1",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "IPS7100 Unpack",
        "func": "rawdata = msg.payload.base16data;\n\nmsg.measurement = msg.payload.sensorID;\n\nmsg.payload = [\n    {\n        pc0_1: Buffer.from(rawdata.slice(0, 8), 'hex').readUInt32LE(),\n        pc0_3: Buffer.from(rawdata.slice(8, 16), 'hex').readUInt32LE(),\n        pc0_5: Buffer.from(rawdata.slice(16, 24), 'hex').readUInt32LE(),\n        pc1_0: Buffer.from(rawdata.slice(24, 32), 'hex').readUInt32LE(),\n        pc2_5: Buffer.from(rawdata.slice(32, 40), 'hex').readUInt32LE(),\n        pc5_0: Buffer.from(rawdata.slice(40, 48), 'hex').readUInt32LE(),\n        pc10_0: Buffer.from(rawdata.slice(48, 56), 'hex').readUInt32LE(),\n        \n        pm0_1: Buffer.from(rawdata.slice(56, 64), 'hex').readFloatLE(),\n        pm0_3: Buffer.from(rawdata.slice(64, 72), 'hex').readFloatLE(),\n        pm0_5: Buffer.from(rawdata.slice(72, 80), 'hex').readFloatLE(),\n        pm1_0: Buffer.from(rawdata.slice(80, 88), 'hex').readFloatLE(),\n        pm2_5: Buffer.from(rawdata.slice(88, 96), 'hex').readFloatLE(),\n        pm5_0: Buffer.from(rawdata.slice(96, 104), 'hex').readFloatLE(),\n        pm10_0: Buffer.from(rawdata.slice(104, 112), 'hex').readFloatLE(),\n    },\n    {\n        location: msg.payload.nodeID\n    },\n];\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 120,
        "wires": [
            [
                "ad9565dd3840cf1c",
                "5760de8d057cac8a"
            ]
        ]
    },
    {
        "id": "5760de8d057cac8a",
        "type": "influxdb out",
        "z": "b44edfff80da0ecb",
        "influxdb": "6d81027f06ed63bd",
        "name": "IPS7100 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1660,
        "y": 120,
        "wires": []
    },
    {
        "id": "aa018634e3f1d940",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "BME280 Unpack",
        "func": "rawdata = msg.payload.base16data;\n\nmsg.measurement = msg.payload.sensorID;\n\nmsg.payload = [\n    {\n        temperature: Buffer.from(rawdata.slice(0, 8), 'hex').readFloatLE(),\n        pressure: Buffer.from(rawdata.slice(8, 16), 'hex').readFloatLE(),\n        humidity: Buffer.from(rawdata.slice(16, 24), 'hex').readFloatLE(),\n    },\n    {\n        location: msg.payload.nodeID\n    },\n];\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 180,
        "wires": [
            [
                "f751c36d276bdcf7",
                "01c6127270dc2da4"
            ]
        ]
    },
    {
        "id": "01c6127270dc2da4",
        "type": "influxdb out",
        "z": "b44edfff80da0ecb",
        "influxdb": "6d81027f06ed63bd",
        "name": "BME280 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1660,
        "y": 180,
        "wires": []
    },
    {
        "id": "2e760f3050c884c4",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "SCD30 Unpack",
        "func": "rawdata = msg.payload.base16data;\n\nmsg.measurement = msg.payload.sensorID;\n\nmsg.payload = [\n    {\n        co2: Buffer.from(rawdata.slice(0, 8), 'hex').readFloatLE(),\n        temperature: Buffer.from(rawdata.slice(8, 16), 'hex').readFloatLE(),\n        humidity: Buffer.from(rawdata.slice(16, 24), 'hex').readFloatLE(),\n    },\n    {\n        location: msg.payload.nodeID\n    },\n];\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "5483187b79041271",
                "fc51bf7a65b8881b"
            ]
        ]
    },
    {
        "id": "fc51bf7a65b8881b",
        "type": "influxdb out",
        "z": "b44edfff80da0ecb",
        "influxdb": "6d81027f06ed63bd",
        "name": "SCD30 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1650,
        "y": 240,
        "wires": []
    },
    {
        "id": "d78d7389e9eb0dc5",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "INA219Duo Unpack",
        "func": "rawdata = msg.payload.base16data;\n\nmsg.measurement = msg.payload.sensorID;\n\nmsg.payload = [\n    {\n        shuntVoltageBattery: Buffer.from(rawdata.slice(0, 8), 'hex').readFloatLE(),\n        busVoltageBattery: Buffer.from(rawdata.slice(8, 16), 'hex').readFloatLE(),\n        currentBattery: Buffer.from(rawdata.slice(16, 24), 'hex').readFloatLE(),\n        powerBattery: Buffer.from(rawdata.slice(24, 32), 'hex').readFloatLE(),\n        shuntVoltageSolar: Buffer.from(rawdata.slice(32, 40), 'hex').readFloatLE(),\n        busVoltageSolar: Buffer.from(rawdata.slice(40, 48), 'hex').readFloatLE(),\n        currentSolar: Buffer.from(rawdata.slice(48, 56), 'hex').readFloatLE(),\n        powerSolar: Buffer.from(rawdata.slice(56, 64), 'hex').readFloatLE(),\n\n    },\n    {\n        location: msg.payload.nodeID\n    },\n];\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "2259b78610cbfb38",
                "14c9c2585fdf7f29"
            ]
        ]
    },
    {
        "id": "14c9c2585fdf7f29",
        "type": "influxdb out",
        "z": "b44edfff80da0ecb",
        "influxdb": "6d81027f06ed63bd",
        "name": "INA219Duo Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1670,
        "y": 300,
        "wires": []
    },
    {
        "id": "208ea1244486b359",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "MGS001 Unpack",
        "func": "rawdata = msg.payload.base16data;\n\nmsg.measurement = msg.payload.sensorID;\n\nmsg.payload = [\n    {\n        c2h5oh: Buffer.from(rawdata.slice(0, 8), 'hex').readFloatLE(),\n        c3h8: Buffer.from(rawdata.slice(8, 16), 'hex').readFloatLE(),\n        c4h10: Buffer.from(rawdata.slice(16, 24), 'hex').readFloatLE(),\n        ch4: Buffer.from(rawdata.slice(24, 32), 'hex').readFloatLE(),\n        co: Buffer.from(rawdata.slice(32, 40), 'hex').readFloatLE(),\n        h2: Buffer.from(rawdata.slice(40, 48), 'hex').readFloatLE(),\n        nh3: Buffer.from(rawdata.slice(48, 56), 'hex').readFloatLE(),\n        no2: Buffer.from(rawdata.slice(56, 64), 'hex').readFloatLE(),\n\n    },\n    {\n        location: msg.payload.nodeID\n    },\n];\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "e91959272228d707",
                "2f6c19eaa27aa369"
            ]
        ]
    },
    {
        "id": "e91959272228d707",
        "type": "influxdb out",
        "z": "b44edfff80da0ecb",
        "influxdb": "6d81027f06ed63bd",
        "name": "MGS001 Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1660,
        "y": 360,
        "wires": []
    },
    {
        "id": "2677e065208970cf",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "PM Unpack",
        "func": "rawdata = msg.payload.base16data;\n\nmsg.measurement = msg.payload.sensorID;\n\nmsg.payload = [\n    {\n        powerMode: Buffer.from(rawdata.slice(0,2), 'hex').readUInt8(),\n\n    },\n    {\n        location: msg.payload.nodeID\n    },\n];\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "323c60badb4cc0d1",
                "7e64c5e26e3dac86"
            ]
        ]
    },
    {
        "id": "7e64c5e26e3dac86",
        "type": "influxdb out",
        "z": "b44edfff80da0ecb",
        "influxdb": "6d81027f06ed63bd",
        "name": "PM Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1640,
        "y": 420,
        "wires": []
    },
    {
        "id": "565ba56ef806b401",
        "type": "function",
        "z": "b44edfff80da0ecb",
        "name": "GPGGALR Unpack",
        "func": "rawdata = msg.payload.base16data;\n\nmsg.measurement = msg.payload.sensorID;\n\nmsg.payload = [\n    {\n        latitude: Buffer.from(rawdata.slice(0, 16), 'hex').readDoubleLE(),\n        longitude: Buffer.from(rawdata.slice(16, 32), 'hex').readDoubleLE(),\n        speed: Buffer.from(rawdata.slice(32, 48), 'hex').readDoubleLE(),\n        altitude: Buffer.from(rawdata.slice(48, 64), 'hex').readDoubleLE(),\n        course: Buffer.from(rawdata.slice(64, 80), 'hex').readDoubleLE(),\n        HDOP: Buffer.from(rawdata.slice(80, 96), 'hex').readDoubleLE(),\n        year: Buffer.from(rawdata.slice(96, 100), 'hex').readUInt16LE(),\n        month: Buffer.from(rawdata.slice(100, 102), 'hex').readUInt8(),\n        day: Buffer.from(rawdata.slice(102, 104), 'hex').readUInt8(),\n        hour: Buffer.from(rawdata.slice(104, 106), 'hex').readUInt8(),\n        minute: Buffer.from(rawdata.slice(106, 108), 'hex').readUInt8(),\n        second: Buffer.from(rawdata.slice(108, 110), 'hex').readUInt8(),\n        \n\n    },\n    {\n        location: msg.payload.nodeID\n    },\n];\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 480,
        "wires": [
            [
                "1d899f263a84644d",
                "3080e9d1dd0f8118"
            ]
        ]
    },
    {
        "id": "1d899f263a84644d",
        "type": "influxdb out",
        "z": "b44edfff80da0ecb",
        "influxdb": "6d81027f06ed63bd",
        "name": "GPGGALR Write",
        "measurement": "",
        "precision": "n",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ns",
        "retentionPolicyV18Flux": "",
        "org": "${DOCKER_INFLUXDB_INIT_ORG}",
        "bucket": "${DOCKER_INFLUXDB_INIT_BUCKET}",
        "x": 1670,
        "y": 480,
        "wires": []
    }
]